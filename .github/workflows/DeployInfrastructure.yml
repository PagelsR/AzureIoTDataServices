# This is a basic workflow to help you get started with Actions

name: Build_and_Deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

  workflow_dispatch:

env:
  buildConfiguration: 'Release'
  buildPlatform: 'Any CPU'
  dotnet_version: '6.x.x'
  Azure_Resource_GroupName: 'rg-PagelsR-IoTDataServices-v3'
  Azure_Resource_GroupLocation: 'eastus'
  
permissions:
  contents: read
  packages: write
      
jobs:
  Build_Application:
    runs-on: windows-latest #ubuntu-latest
    name: Build Application
    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.dotnet_version }}

      # Run dotnet build and publish
    - name: dotnet build unit test and publish
      run: |
        dotnet build FunctionApps/FunctionApps.csproj --configuration ${{ env.buildConfiguration }} --output './FunctionApps'

    - name: Upload Build Artifacts-FunctionApp
      uses: actions/upload-artifact@v2
      with:
        name: FunctionApps
        path: ${{ github.workspace }}/FunctionApps

    - name: Upload Infrastucture Files
      uses: actions/upload-artifact@v3
      with:
        name: IaC
        path: ${{ github.workspace }}/IaC/*.*
  
  Deploy_Infrastructure:
    runs-on: ubuntu-latest
    name: Deploy Infrastructure
    needs: Build_Application
    outputs:
      output_functionAppName: ${{ steps.Infra.outputs.out_functionAppName }}
      output_iotHubName: ${{ steps.Infra.outputs.out_iotHubName }}

    steps:
    - name: Login to Azure
      uses: azure/login@v1
      continue-on-error: false
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Ensure Resource Group Exists
      uses: Azure/CLI@v1
      continue-on-error: true
      with:
        inlineScript: |
          #!/bin/bash
          az group create --name ${{ env.Azure_Resource_GroupName }} --location ${{ env.Azure_Resource_GroupLocation }}

    - name: Ensure Resource Group is UnLocked
      #if: contains(github.event_name, 'push')
      uses: Azure/CLI@v1
      continue-on-error: true
      with:
        inlineScript: |
          az group lock delete --name DontDeleteMe --resource-group ${{ env.Azure_Resource_GroupName }}

    - name: Download Build Artifact-Infrastructure
      uses: actions/download-artifact@v2
      continue-on-error: false
      with:
        name: IaC
        path: ${{ github.workspace }}/IaC

    - name: Deploy Infrastructure
      id: Infra
      uses: azure/arm-deploy@v1
      continue-on-error: false
      with:
        scope: resourcegroup
        resourceGroupName: ${{ env.Azure_Resource_GroupName }}
        template: ./IaC/main.bicep
        #parameters: ./IaC/main-1.params.json Deployed_Environment=${{ env.Deployed_Environment }}
        deploymentMode: Incremental
        failOnStdErr: false

    # Install Azure IoT Extension
    - name: Create a device
      uses: Azure/CLI@v1
      continue-on-error: true
      with:
        inlineScript: |
          az extension add --name azure-iot

    # Create an IoT device
    - name: Create a device
      uses: Azure/CLI@v1
      continue-on-error: true
      with:
        inlineScript: |
          az iot hub device-identity create -n ${{ steps.Infra.outputs.output_iotHubName }} -d 'raspberrypi-detroit-002' --ee

    # Store the connection string of IoT device
    # az iot hub device-identity connection-string show --device-id
    # [--auth-type {key, login}]
    # [--hub-name]
    # [--key-type {primary, secondary}]
    # [--login]
    # [--resource-group]

    - name: Ensure Resource Group is Locked
      uses: Azure/CLI@v1
      continue-on-error: true
      with:
        inlineScript: |
          az group lock create --lock-type CanNotDelete --name DontDeleteMe --resource-group ${{ env.Azure_Resource_GroupName }} --notes 'Prevent deletion of the resource group'
  
    # Used for Demos only.
    - name: DEBUG ONLY Display Output Variables
      run: |
          echo 'output_iotHubName: ${{ steps.Infra.outputs.output_iotHubName }}'
          echo 'output_functionAppName: ${{ steps.Infra.outputs.out_functionAppName }}'

  Deploy_Application:
    runs-on: ubuntu-latest
    name: Deploy Application
    needs: [Deploy_Infrastructure, Build_Application]
      
    permissions:
      contents: read
    #  packages: write

    # Identify any jobs that must complete successfully before this job will run.
    steps:
      
    - name: Login to Azure
      uses: azure/login@v1
      continue-on-error: false
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Ensure Resource Group is UnLocked
      uses: Azure/CLI@v1
      continue-on-error: true
      with:
        inlineScript: |
          az group lock delete --name DontDeleteMe --resource-group ${{ env.Azure_Resource_GroupName }} && sleep 10

    - name: Download Build Artifacts-Function Application
      uses: actions/download-artifact@v2
      continue-on-error: false
      with:
        name: FunctionApps
        path: ${{ github.workspace }}/FunctionApps

    # Deploy Function Application
    - name: 'Deploy Function Application'
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ needs.Deploy_Infrastructure.outputs.output_functionAppName }}
        #slot-name: 'production'
        package: './FunctionApps'
      
    - name: Ensure Resource Group is Locked
      uses: Azure/CLI@v1
      continue-on-error: true
      with:
        inlineScript: |
          az group lock create --lock-type CanNotDelete --name DontDeleteMe --resource-group ${{ env.Azure_Resource_GroupName }} --notes 'Prevent deletion of the resource group'
  