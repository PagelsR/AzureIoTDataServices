# This is a basic workflow to help you get started with Actions

name: Build_and_Deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

env:
  Azure_Resource_GroupName: 'rg-PagelsR-IoTDataServices-v2'
  Azure_Resource_GroupLocation: 'eastus'
  
permissions:
  contents: read
  packages: write
      
jobs:
  Build_Application:
    runs-on: windows-latest #ubuntu-latest
    name: Build Application
    steps:
    - uses: actions/checkout@v3
    
    - name: Upload Infrastucture Files
      uses: actions/upload-artifact@v3
      with:
        name: IaC
        path: ${{ github.workspace }}/IaC/*.*
  
  Deploy_Infrastructure:
    runs-on: ubuntu-latest
    name: Deploy Infrastructure
      
    steps:
    - name: Login to Azure
      uses: azure/login@v1
      continue-on-error: false
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Ensure Resource Group Exists
      uses: Azure/CLI@v1
      continue-on-error: true
      with:
        inlineScript: |
          #!/bin/bash
          az group create --name ${{ env.Azure_Resource_GroupName }} --location ${{ env.Azure_Resource_GroupLocation }}

    - name: Ensure Resource Group is UnLocked
      #if: contains(github.event_name, 'push')
      uses: Azure/CLI@v1
      continue-on-error: true
      with:
        inlineScript: |
          az group lock delete --name DontDeleteMe --resource-group ${{ env.Azure_Resource_GroupName }}

    - name: Download Build Artifact-Infrastructure
      uses: actions/download-artifact@v2
      continue-on-error: false
      with:
        name: IaC
        path: ${{ github.workspace }}/IaC

    - name: Deploy Infrastructure
      id: Infra
      uses: azure/arm-deploy@v1
      continue-on-error: false
      with:
        scope: resourcegroup
        resourceGroupName: ${{ env.Azure_Resource_GroupName }}
        template: ./IaC/main.bicep
        #parameters: ./IaC/main-1.params.json Deployed_Environment=${{ env.Deployed_Environment }}
        deploymentMode: Incremental
        failOnStdErr: false

    - name: Ensure Resource Group is Locked
      #if: contains(github.event_name, 'push')
      uses: Azure/CLI@v1
      continue-on-error: true
      with:
        inlineScript: |
          az group lock create --lock-type CanNotDelete --name DontDeleteMe --resource-group ${{ env.Azure_Resource_GroupName }} --notes 'Prevent deletion of the resource group'
  
